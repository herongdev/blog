import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.oqSrIbQK.js";const k=JSON.parse('{"title":"阿里云 ECS：密码/密钥登录一文通（去重精编版）","description":"","frontmatter":{"title":"阿里云 ECS：密码/密钥登录一文通（去重精编版）","date":"2025-09-21T00:00:00.000Z","tags":["SSH","公钥私钥","阿里云ECS","FileZilla"]},"headers":[],"relativePath":"posts/云开发/阿里云/ssh和ftp登录问题.md","filePath":"posts/云开发/阿里云/ssh和ftp登录问题.md","lastUpdated":1758470468000}'),l={name:"posts/云开发/阿里云/ssh和ftp登录问题.md"};function o(n,s,h,d,p,r){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h2 id="正确认知-核心概念" tabindex="-1">正确认知（核心概念） <a class="header-anchor" href="#正确认知-核心概念" aria-label="Permalink to &quot;正确认知（核心概念）&quot;">​</a></h2><ul><li><strong>公钥</strong>：放在服务器 <code>~/.ssh/authorized_keys</code>，是“可信名单”。</li><li><strong>私钥</strong>：只保存在本地设备，用来<strong>对登录挑战签名</strong>。私钥绝不上传。</li><li><strong>认证过程</strong>：客户端用私钥签名 → 服务器用已存公钥验证 → 验证通过即放行。</li></ul><h2 id="标准做法-按优先级执行" tabindex="-1">标准做法（按优先级执行） <a class="header-anchor" href="#标准做法-按优先级执行" aria-label="Permalink to &quot;标准做法（按优先级执行）&quot;">​</a></h2><h3 id="a-密钥登录-推荐" tabindex="-1">A. 密钥登录（推荐） <a class="header-anchor" href="#a-密钥登录-推荐" aria-label="Permalink to &quot;A. 密钥登录（推荐）&quot;">​</a></h3><ol><li><p><strong>为每台设备生成独立密钥对</strong>（更安全）</p><ul><li><p>macOS/Linux：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;my-mac&quot;</span></span></code></pre></div></li><li><p>Windows：</p><ul><li>用 <strong>PuTTYgen</strong> 生成 <code>.ppk</code>（或用 OpenSSH 同上生成 <code>id_ed25519</code>）</li></ul></li></ul></li><li><p><strong>把各设备“公钥”加入服务器</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 700</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复杂逻辑：向“可信名单”追加公钥</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ssh-ed25519 AAAAC3...你的公钥...&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span></code></pre></div></li><li><p><strong>确认 SSH 允许公钥认证</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复杂逻辑：打开公钥认证；是否禁用密码视需求而定</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /etc/ssh/sshd_config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PubkeyAuthentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PasswordAuthentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改后</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sshd</span></span></code></pre></div></li><li><p>可选：也可在<strong>阿里云控制台</strong>“绑定/更换密钥对”，平台会自动把公钥写入实例；你本地保管好下载到的<strong>私钥</strong>（仅有一次下载机会）。</p></li></ol><h3 id="b-临时启用-密码登录-兜底" tabindex="-1">B. 临时启用“密码登录”（兜底） <a class="header-anchor" href="#b-临时启用-密码登录-兜底" aria-label="Permalink to &quot;B. 临时启用“密码登录”（兜底）&quot;">​</a></h3><ol><li>重装系统后，之前密码登录可能会失效；如果我们给服务器绑定新的密钥对，密码登录也会失效，这时，我们要去控制台<strong>重置实例密码</strong>。</li><li><code>sshd_config</code> 打开 <code>PasswordAuthentication yes</code> → <code>sudo systemctl restart sshd</code>。</li><li>登录成功后，尽快回到 <strong>仅密钥</strong> 或 <strong>密钥优先</strong> 的策略。</li></ol><h2 id="filezilla-正确姿势-sftp" tabindex="-1">FileZilla 正确姿势（SFTP） <a class="header-anchor" href="#filezilla-正确姿势-sftp" aria-label="Permalink to &quot;FileZilla 正确姿势（SFTP）&quot;">​</a></h2><ul><li><p>协议：<code>SFTP</code></p></li><li><p>主机：ECS 公网 IP/域名；端口 <code>22</code>；用户名（镜像常见：<code>ubuntu</code> 或 <code>root</code>）</p></li><li><p>登录类型：<strong>密钥文件</strong></p><ul><li>Windows：选 <code>.ppk</code>（若手头是 <code>.pem</code>，用 PuTTYgen <code>Load</code>→<code>Save private key</code> 转 <code>.ppk</code>）</li><li>macOS/Linux：直接选 <code>.pem</code> 或 <code>~/.ssh/id_ed25519</code></li></ul></li><li><p>连接失败排查：</p><ol><li>安全组是否放行 22；</li><li>用户名是否正确；</li><li>私钥权限（macOS/Linux：<code>chmod 600 私钥</code>）；</li><li>查看日志：Ubuntu 看 <code>/var/log/auth.log</code>，CentOS 看 <code>/var/log/secure</code>。</li></ol></li></ul><h2 id="多设备如何用" tabindex="-1">多设备如何用？ <a class="header-anchor" href="#多设备如何用" aria-label="Permalink to &quot;多设备如何用？&quot;">​</a></h2><ul><li><strong>更安全</strong>：每台设备生成一把独立密钥，对应公钥都加入同一台服务器的 <code>authorized_keys</code>。</li><li><strong>更省事</strong>（不推荐）：复制同一私钥到多设备，风险面更大。</li><li><strong>撤销更简单</strong>：独立密钥方案下，想禁用某设备，直接从 <code>authorized_keys</code> 删除对应公钥行即可。</li></ul><h2 id="一句话版最终总结-可替换你原文" tabindex="-1">一句话版最终总结（可替换你原文） <a class="header-anchor" href="#一句话版最终总结-可替换你原文" aria-label="Permalink to &quot;一句话版最终总结（可替换你原文）&quot;">​</a></h2><blockquote><p><strong>服务器预存“公钥名单”，本地保管“私钥”。登录时，本地用私钥对挑战签名，服务器用公钥验证，无需传输私钥。重装系统后需重新写入公钥或重置密码。推荐每台设备各自生成密钥对，把各自公钥加入服务器的 <code>authorized_keys</code>，以密钥登录为主、密码登录为辅。</strong></p></blockquote><p><strong>本质</strong></p><ol><li><strong>这台电脑本地必须持有与该公钥成对的“私钥”</strong>（可带口令短语 passphrase）。</li><li><strong>公钥要加到服务器目标用户的“允许列表”</strong>（通常是 <code>~/.ssh/authorized_keys</code>，或通过阿里云控制台绑定后由系统写入）。</li><li>服务器侧要允许：<code>PubkeyAuthentication yes</code>，安全组放行 <code>22</code>，用户名正确（如 <code>ubuntu</code>/<code>root</code>），公钥/目录权限合理（<code>~/.ssh</code> 700、<code>authorized_keys</code> 600）。</li></ol><blockquote><p>小结：<strong>哪台电脑 = 拥有对应私钥 + 其公钥已在服务器名单中</strong> → 就能用密钥登录。多个设备可各自一把密钥，往 <code>authorized_keys</code> 里各加一行即可。</p></blockquote>`,16)])])}const g=i(l,[["render",o]]);export{k as __pageData,g as default};
