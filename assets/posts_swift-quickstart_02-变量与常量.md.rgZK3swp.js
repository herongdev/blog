import{_ as i,c as a,o as t,ag as l}from"./chunks/framework.oqSrIbQK.js";const c=JSON.parse('{"title":"Swift 入门（2）：变量与常量","description":"","frontmatter":{"title":"Swift 入门（2）：变量与常量","date":"2025-09-14T00:00:00.000Z","categories":"Swift","tags":["Swift","iOS","教程"]},"headers":[],"relativePath":"posts/swift-quickstart/02-变量与常量.md","filePath":"posts/swift-quickstart/02-变量与常量.md","lastUpdated":1758470468000}'),n={name:"posts/swift-quickstart/02-变量与常量.md"};function e(h,s,p,k,r,d){return t(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="swift-入门-2-变量与常量" tabindex="-1">Swift 入门（2）：变量与常量 <a class="header-anchor" href="#swift-入门-2-变量与常量" aria-label="Permalink to &quot;Swift 入门（2）：变量与常量&quot;">​</a></h1><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><ul><li><strong><code>var</code></strong>：变量，可以修改。</li><li><strong><code>let</code></strong>：常量，定义后不可修改。</li></ul><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // ✅ 可以修改</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// pi = 3.14</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ❌ 报错：常量不可修改</span></span></code></pre></div><h2 id="类型推断与显式声明" tabindex="-1">类型推断与显式声明 <a class="header-anchor" href="#类型推断与显式声明" aria-label="Permalink to &quot;类型推断与显式声明&quot;">​</a></h2><p>Swift 编译器会自动推断变量的类型，但你也可以显式声明。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 类型推断</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Alice&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 自动推断为 String</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> score </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 95</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 自动推断为 Int</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显式声明</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> city: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Beijing&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> year: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2025</span></span></code></pre></div><h2 id="命名规范" tabindex="-1">命名规范 <a class="header-anchor" href="#命名规范" aria-label="Permalink to &quot;命名规范&quot;">​</a></h2><ul><li>推荐使用 <strong>小驼峰</strong>：<code>userName</code>、<code>totalScore</code>。</li><li>可以使用 Unicode：<code>let 😊 = &quot;smile&quot;</code>（但实际开发不推荐）。</li><li>避免拼音或缩写，代码更清晰。</li></ul><h2 id="多变量声明" tabindex="-1">多变量声明 <a class="header-anchor" href="#多变量声明" aria-label="Permalink to &quot;多变量声明&quot;">​</a></h2><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> red </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, green </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, blue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span></span></code></pre></div><h2 id="懒加载与延迟初始化" tabindex="-1">懒加载与延迟初始化 <a class="header-anchor" href="#懒加载与延迟初始化" aria-label="Permalink to &quot;懒加载与延迟初始化&quot;">​</a></h2><p>有些变量可能要等到第一次用时才计算，可以用 <code>lazy</code> 修饰。</p><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lazy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> loadData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 第一次访问时才会调用 loadData()</span></span></code></pre></div><blockquote><p>注意：<code>lazy</code> 只能修饰 <strong>var</strong>，不能修饰 <strong>let</strong>。</p></blockquote><h2 id="可变性原则" tabindex="-1">可变性原则 <a class="header-anchor" href="#可变性原则" aria-label="Permalink to &quot;可变性原则&quot;">​</a></h2><p>Swift 推荐：</p><ul><li><strong>默认用 <code>let</code></strong>，只有需要修改时才用 <code>var</code>。</li><li>这样可以避免无意的修改，提高代码安全性。</li></ul><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><ul><li><code>var</code> 定义变量，可变。</li><li><code>let</code> 定义常量，不可变。</li><li>默认用 <code>let</code>，这是 Swift 的最佳实践。</li><li>类型推断让代码更简洁，但在需要时可显式声明。</li></ul>`,20)])])}const g=i(n,[["render",e]]);export{c as __pageData,g as default};
