import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.oqSrIbQK.js";const g=JSON.parse('{"title":"使用 <img> 宽高 vs 外层占位：不闪不抖的两套写法","description":"","frontmatter":{"title":"使用 `<img>` 宽高 vs 外层占位：不闪不抖的两套写法","date":"2025-09-18T00:00:00.000Z","tags":["前端性能","图片优化","CLS"],"categories":["Web 前端"]},"headers":[],"relativePath":"posts/前端/性能优化/使用 img 宽高 vs 外层占位：不闪不抖的两套写法.md","filePath":"posts/前端/性能优化/使用 img 宽高 vs 外层占位：不闪不抖的两套写法.md","lastUpdated":1759031800000}'),h={name:"posts/前端/性能优化/使用 img 宽高 vs 外层占位：不闪不抖的两套写法.md"};function l(e,s,p,k,o,d){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h2 id="摘要" tabindex="-1">摘要 <a class="header-anchor" href="#摘要" aria-label="Permalink to &quot;摘要&quot;">​</a></h2><p>是否&quot;闪一下&quot;与&quot;远程/本地&quot;无关，关键在<strong>提前占位</strong>与<strong>缓存</strong>。实践上有两套稳妥方案：</p><ol><li>已知原图尺寸 → 在 <code>&lt;img&gt;</code> 上写 <strong>像素级 <code>width</code>/<code>height</code> 属性</strong> 定比例，再用 CSS 自适应；</li><li>需要统一裁切比例/拿不到尺寸 → <strong>外层容器 <code>aspect-ratio</code> 占位</strong>，<code>img</code> 充满容器并用 <code>object-fit</code> 控裁切。</li></ol><hr><h2 id="整体思路" tabindex="-1">整体思路 <a class="header-anchor" href="#整体思路" aria-label="Permalink to &quot;整体思路&quot;">​</a></h2><ul><li><strong>提前给出宽高比</strong>，避免布局抖动（CLS），首屏更稳。</li><li><strong><code>width/height</code> 要写成 HTML 属性（像素）</strong>，用于固有尺寸；CSS 再决定如何缩放。</li><li><strong>裁切/统一比例场景</strong>改用外层占位：<code>aspect-ratio + object-fit</code>。</li></ul><hr><h2 id="适用场景对比" tabindex="-1">适用场景对比 <a class="header-anchor" href="#适用场景对比" aria-label="Permalink to &quot;适用场景对比&quot;">​</a></h2><ul><li><strong>已知原图尺寸（新闻图、正文图、Logo）</strong>：<code>&lt;img width height&gt;</code>（像素）＋ <code>max-width:100%; height:auto;</code></li><li><strong>卡片封面、Banner、列表缩略图（比例统一/需裁切）</strong>：外层 <code>aspect-ratio</code>，内层 <code>object-fit:cover</code></li><li><strong>完整显图不裁切</strong>：<code>object-fit:contain</code></li></ul><hr><h2 id="分步实现" tabindex="-1">分步实现 <a class="header-anchor" href="#分步实现" aria-label="Permalink to &quot;分步实现&quot;">​</a></h2><h3 id="方案-a-在-img-上写像素-width-height" tabindex="-1">方案 A：在 <code>&lt;img&gt;</code> 上写像素 <code>width/height</code> <a class="header-anchor" href="#方案-a-在-img-上写像素-width-height" aria-label="Permalink to &quot;方案 A：在 \`&lt;img&gt;\` 上写像素 \`width/height\`&quot;">​</a></h3><ol><li>获取原图真实像素尺寸（构建期或接口返回）。</li><li>在 <code>&lt;img&gt;</code> 标签<strong>写属性</strong> <code>width</code>、<code>height</code>（像素值）。</li><li>用 CSS 做响应式（<code>max-width:100%; height:auto; display:block;</code>）。</li></ol><p><strong>最小变更片段：</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 复杂逻辑：用属性提供&quot;固有尺寸&quot;让浏览器提前算出比例，CSS 再自适应 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/images/banner.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1200&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;400&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max-width:100%; height:auto; display:block;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;banner&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h3 id="方案-b-外层占位-统一比例-需要裁切" tabindex="-1">方案 B：外层占位（统一比例/需要裁切） <a class="header-anchor" href="#方案-b-外层占位-统一比例-需要裁切" aria-label="Permalink to &quot;方案 B：外层占位（统一比例/需要裁切）&quot;">​</a></h3><ol><li>外层容器写 <code>aspect-ratio</code> 作为占位，控制统一比例。</li><li><code>img</code> 宽高 100% 填充容器，配 <code>object-fit</code> 控制裁切或等比内含。</li></ol><p><strong>最小变更片段：</strong></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 复杂逻辑：外层用固定比例占位，内层充满并按需裁切 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aspect-ratio: 3 / 1; width:100%; overflow:hidden;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/images/cover.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width:100%; height:100%; object-fit:cover; display:block;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cover&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h2 id="最简代码示例" tabindex="-1">最简代码示例 <a class="header-anchor" href="#最简代码示例" aria-label="Permalink to &quot;最简代码示例&quot;">​</a></h2><h3 id="已知尺寸-推荐写法" tabindex="-1">已知尺寸（推荐写法） <a class="header-anchor" href="#已知尺寸-推荐写法" aria-label="Permalink to &quot;已知尺寸（推荐写法）&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 复杂逻辑：属性 width/height 定比例，CSS 负责响应式缩放 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.example.com/pic-800.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;800&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;450&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max-width:100%; height:auto; display:block;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pic&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h3 id="统一比例-裁切" tabindex="-1">统一比例+裁切 <a class="header-anchor" href="#统一比例-裁切" aria-label="Permalink to &quot;统一比例+裁切&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 复杂逻辑：卡片封面按 16:9 占位，cover 保证铺满不变形 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aspect-ratio: 16 / 9; width:100%; overflow:hidden;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.example.com/cover.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width:100%; height:100%; object-fit:cover; display:block;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cover&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="不裁切-完整显示" tabindex="-1">不裁切（完整显示） <a class="header-anchor" href="#不裁切-完整显示" aria-label="Permalink to &quot;不裁切（完整显示）&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 复杂逻辑：contain 模式完整展示图片，可能留边 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;aspect-ratio: 4 / 3; width:100%; background:#f5f5f5;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.example.com/photo.jpg&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;width:100%; height:100%; object-fit:contain; display:block;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;photo&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h2 id="常见误区与修正" tabindex="-1">常见误区与修正 <a class="header-anchor" href="#常见误区与修正" aria-label="Permalink to &quot;常见误区与修正&quot;">​</a></h2><ul><li><strong>只写 <code>img { width:100%; height:auto }</code> 不写属性宽高</strong> → 首次渲染前无比例信息，可能抖动。 <strong>修正</strong>：补上 <code>&lt;img width height&gt;</code>（像素）。</li><li><strong>给 <code>img</code> 写 <code>height:100%</code>，但外层未定高/未占位</strong> → 变形或跳动。 <strong>修正</strong>：外层用 <code>aspect-ratio</code> 占位，或改 <code>height:auto</code>。</li><li><strong>固定外层高度但没设 <code>object-fit</code></strong> → 拉伸。 <strong>修正</strong>：按需求用 <code>cover/contain</code>。</li></ul><hr><h2 id="小结-怎么选" tabindex="-1">小结（怎么选） <a class="header-anchor" href="#小结-怎么选" aria-label="Permalink to &quot;小结（怎么选）&quot;">​</a></h2><ul><li><strong>能拿到原图尺寸</strong>：优先 <code>&lt;img width=&quot;W&quot; height=&quot;H&quot;&gt; + max-width:100%</code> ——最简单、最稳。</li><li><strong>要统一版式或裁切</strong>：外层 <code>aspect-ratio</code> + <code>object-fit</code>。</li><li>两者都做对了，首屏基本就不闪、不抖。</li></ul>`,33)])])}const c=i(h,[["render",l]]);export{g as __pageData,c as default};
