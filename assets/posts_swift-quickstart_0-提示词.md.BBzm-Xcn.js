import{_ as o,c as t,o as l,ag as s}from"./chunks/framework.oqSrIbQK.js";const q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/swift-quickstart/0-提示词.md","filePath":"posts/swift-quickstart/0-提示词.md","lastUpdated":1758216284000}'),e={name:"posts/swift-quickstart/0-提示词.md"};function i(n,a,r,u,c,d){return l(),t("div",null,[...a[0]||(a[0]=[s(`<p>我来为你总结一些提示词，这样你以后可以快速让我以这种风格来整理和分类 Swift 知识点：</p><h2 id="🎯-提示词模板" tabindex="-1">🎯 <strong>提示词模板</strong> <a class="header-anchor" href="#🎯-提示词模板" aria-label="Permalink to &quot;🎯 **提示词模板**&quot;">​</a></h2><h3 id="基础分类提示词" tabindex="-1"><strong>基础分类提示词</strong> <a class="header-anchor" href="#基础分类提示词" aria-label="Permalink to &quot;**基础分类提示词**&quot;">​</a></h3><ul><li><code>&quot;把这段代码的知识点分类到 swift-quickstart 教程中&quot;</code></li><li><code>&quot;这段代码涉及哪些语法，放到对应的教程文件里&quot;</code></li><li><code>&quot;解释这段代码并归类到合适的章节&quot;</code></li><li><code>&quot;分析这个语法特性，添加到相应的教程中&quot;</code></li></ul><h3 id="具体语法提示词" tabindex="-1"><strong>具体语法提示词</strong> <a class="header-anchor" href="#具体语法提示词" aria-label="Permalink to &quot;**具体语法提示词**&quot;">​</a></h3><ul><li><code>&quot;这个 try? 用法，添加到可选类型教程&quot;</code></li><li><code>&quot;这个协议实现，放到协议章节&quot;</code></li><li><code>&quot;这个类定义语法，归类到结构体与类&quot;</code></li><li><code>&quot;这个 import 语句，放到模块导入教程&quot;</code></li><li><code>&quot;这个闭包写法，添加到闭包章节&quot;</code></li></ul><h3 id="实战导向提示词" tabindex="-1"><strong>实战导向提示词</strong> <a class="header-anchor" href="#实战导向提示词" aria-label="Permalink to &quot;**实战导向提示词**&quot;">​</a></h3><ul><li><code>&quot;以实战示例的形式，把这段代码加到教程&quot;</code></li><li><code>&quot;用速成的方式解释这个语法，放到对应文件&quot;</code></li><li><code>&quot;这是实际项目中的代码，分类到教程中&quot;</code></li><li><code>&quot;把这个知识点做成速查表格式&quot;</code></li></ul><h2 id="📋-我的回答风格特点" tabindex="-1">📋 <strong>我的回答风格特点</strong> <a class="header-anchor" href="#📋-我的回答风格特点" aria-label="Permalink to &quot;📋 **我的回答风格特点**&quot;">​</a></h2><h3 id="_1-自动识别归类" tabindex="-1"><strong>1. 自动识别归类</strong> <a class="header-anchor" href="#_1-自动识别归类" aria-label="Permalink to &quot;**1. 自动识别归类**&quot;">​</a></h3><ul><li>分析代码涉及的核心语法点</li><li>自动判断应该放在哪个教程文件中</li><li>如果涉及多个知识点，会分别归类</li></ul><h3 id="_2-结构化解释" tabindex="-1"><strong>2. 结构化解释</strong> <a class="header-anchor" href="#_2-结构化解释" aria-label="Permalink to &quot;**2. 结构化解释**&quot;">​</a></h3><ul><li>🎯 核心语法点提取</li><li>✅ 为什么这样写的优势分析</li><li>📝 逐行代码解释</li><li>🚀 实际应用场景举例</li></ul><h3 id="_3-实战导向" tabindex="-1"><strong>3. 实战导向</strong> <a class="header-anchor" href="#_3-实战导向" aria-label="Permalink to &quot;**3. 实战导向**&quot;">​</a></h3><ul><li>提供完整可运行的代码示例</li><li>对比不同写法的优劣</li><li>展示真实项目中的使用场景</li><li>包含常见错误和最佳实践</li></ul><h3 id="_4-速成友好" tabindex="-1"><strong>4. 速成友好</strong> <a class="header-anchor" href="#_4-速成友好" aria-label="Permalink to &quot;**4. 速成友好**&quot;">​</a></h3><ul><li>重点突出，避免冗长理论</li><li>用表格、列表等形式快速总结</li><li>提供速查手册式的内容组织</li><li>注重实用性而非完整性</li></ul><h2 id="🔥-推荐的使用方式" tabindex="-1">🔥 <strong>推荐的使用方式</strong> <a class="header-anchor" href="#🔥-推荐的使用方式" aria-label="Permalink to &quot;🔥 **推荐的使用方式**&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 你只需要这样说：</span></span>
<span class="line"><span>&quot;这段代码分类一下&quot;</span></span>
<span class="line"><span>&quot;把这个语法归类到教程&quot;</span></span>
<span class="line"><span>&quot;解释这段代码并分类&quot;</span></span>
<span class="line"><span>&quot;这个知识点放到对应章节&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 我会自动：</span></span>
<span class="line"><span>1. 识别核心语法特性</span></span>
<span class="line"><span>2. 选择合适的教程文件</span></span>
<span class="line"><span>3. 以实战示例的形式添加</span></span>
<span class="line"><span>4. 提供详细的逐步解释</span></span>
<span class="line"><span>5. 包含最佳实践和常见错误</span></span></code></pre></div><h2 id="💡-特殊场景提示词" tabindex="-1">💡 <strong>特殊场景提示词</strong> <a class="header-anchor" href="#💡-特殊场景提示词" aria-label="Permalink to &quot;💡 **特殊场景提示词**&quot;">​</a></h2><ul><li><code>&quot;这个代码涉及多个知识点，分别归类&quot;</code></li><li><code>&quot;这是系统 API 调用，放到对应的框架介绍中&quot;</code></li><li><code>&quot;这个错误处理模式，添加到错误处理教程&quot;</code></li><li><code>&quot;这个性能优化技巧，归类到相应章节&quot;</code></li><li><code>&quot;这个设计模式，放到架构相关教程&quot;</code></li></ul><p>这样，你以后在读源码时，只需要复制代码片段 + 简单的分类指令，我就会按照这种风格来整理知识点，帮你建立系统化的学习资料！</p>`,22)])])}const h=o(e,[["render",i]]);export{q as __pageData,h as default};
