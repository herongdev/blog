import{_ as e,c as o,o as r,ag as n}from"./chunks/framework.oqSrIbQK.js";const g=JSON.parse('{"title":"WebAuthn transports 的所有取值与含义（含新版 smart-card / hybrid / 历史 cable）","description":"","frontmatter":{"title":"WebAuthn `transports` 的所有取值与含义（含新版 `smart-card` / `hybrid` / 历史 `cable`）","date":"2025-09-16T00:00:00.000Z","tags":["WebAuthn","Passkeys","FIDO2"]},"headers":[],"relativePath":"posts/需求实现/登录鉴权/WebAuthn transports 的所有取值与含义（含新版 smart-card/hybrid/历史 cable）.md","filePath":"posts/需求实现/登录鉴权/WebAuthn transports 的所有取值与含义（含新版 smart-card/hybrid/历史 cable）.md","lastUpdated":1758216284000}'),a={name:"posts/需求实现/登录鉴权/WebAuthn transports 的所有取值与含义（含新版 smart-card/hybrid/历史 cable）.md"};function s(d,t,l,c,i,h){return r(),o("div",null,[...t[0]||(t[0]=[n('<h2 id="概览" tabindex="-1">概览 <a class="header-anchor" href="#概览" aria-label="Permalink to &quot;概览&quot;">​</a></h2><p><code>transports</code> 是<strong>提示性（hint）字段</strong>，告诉浏览器“这枚凭据对应的认证器通常通过什么介质可达”。它来自<strong>注册时</strong>的 <code>AuthenticatorAttestationResponse.getTransports()</code>，建议你把返回值存到数据库；<strong>认证时</strong>再放进 <code>allowCredentials[i].transports</code>，以便浏览器优先尝试合适的介质。该字段<strong>不是安全校验的一部分</strong>，浏览器可忽略未知值。(<a href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports" title="AuthenticatorAttestationResponse: getTransports() method - Web APIs | MDN" target="_blank" rel="noreferrer">MDN Web Docs</a>)</p><hr><h2 id="规范定义的取值-webauthn-level-3" tabindex="-1">规范定义的取值（WebAuthn Level 3） <a class="header-anchor" href="#规范定义的取值-webauthn-level-3" aria-label="Permalink to &quot;规范定义的取值（WebAuthn Level 3）&quot;">​</a></h2><blockquote><p>WebAuthn L3 的 <code>AuthenticatorTransport</code> 枚举：<code>&quot;usb&quot; | &quot;nfc&quot; | &quot;ble&quot; | &quot;smart-card&quot; | &quot;hybrid&quot; | &quot;internal&quot;</code>。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></blockquote><ul><li><p><strong><code>usb</code></strong> 可移除的 USB 安全密钥（如 YubiKey）。典型用于台式机有线插拔。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li><li><p><strong><code>nfc</code></strong> 通过近场通信（NFC）触达的漫游认证器；常见于手机轻触安全钥。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li><li><p><strong><code>ble</code></strong> 通过蓝牙低功耗（BLE）连接的漫游认证器。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li><li><p><strong><code>smart-card</code></strong> 通过 <strong>接触式智能卡（ISO/IEC 7816）</strong> 的认证器；适配某些企业/政务卡式设备。<strong>这是 L3 新增枚举</strong>。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li><li><p><strong><code>hybrid</code></strong> 混合传输：通常指<strong>跨设备认证</strong>（电脑上登录，拿手机确认），由<strong>近距信道 + 云辅助</strong>组合完成；是现代 <strong>passkeys（CDA/caBLE）</strong> 的核心通道。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li><li><p><strong><code>internal</code></strong> 平台认证器（设备内置，不可移除），如 Windows Hello、Touch ID、Android 平台密钥。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</p></li></ul><blockquote><p>说明：MDN 的 <code>getTransports()</code> 文档同样列举了 <code>ble / hybrid / internal / nfc / usb</code>，并建议把注册期获得的数组原样存储并在认证时回填为 <code>allowCredentials[*].transports</code>。(<a href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports" title="AuthenticatorAttestationResponse: getTransports() method - Web APIs | MDN" target="_blank" rel="noreferrer">MDN Web Docs</a>)</p></blockquote><hr><h2 id="兼容与历史值" tabindex="-1">兼容与历史值 <a class="header-anchor" href="#兼容与历史值" aria-label="Permalink to &quot;兼容与历史值&quot;">​</a></h2><ul><li><strong><code>cable</code>（历史/实现细节）</strong> 早期生态（尤其是 Chrome/DevTools 与部分库）里把“<strong>cloud-assisted BLE</strong>（caBLE）”直接写成 <code>cable</code>。在 L3 里正式名称为 <strong><code>hybrid</code></strong>；若你读取到 <code>cable</code>，可以把它<strong>等价视作 <code>hybrid</code></strong>。(<a href="https://chromedevtools.github.io/devtools-protocol/tot/WebAuthn/?utm_source=chatgpt.com" title="WebAuthn domain - Chrome DevTools Protocol - GitHub Pages" target="_blank" rel="noreferrer">chromedevtools.github.io</a>)</li></ul><hr><h2 id="实务建议" tabindex="-1">实务建议 <a class="header-anchor" href="#实务建议" aria-label="Permalink to &quot;实务建议&quot;">​</a></h2><ol><li><strong>注册时保存</strong> 用 <code>response.getTransports()</code> 取到数组（如 <code>[&quot;internal&quot;]</code> 或 <code>[&quot;usb&quot;,&quot;nfc&quot;]</code>），<strong>与凭据一起存库</strong>。下次认证时作为 hint 提供，减少用户被动尝试的摩擦。(<a href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports" title="AuthenticatorAttestationResponse: getTransports() method - Web APIs | MDN" target="_blank" rel="noreferrer">MDN Web Docs</a>)</li><li><strong>认证时回填</strong> 为每个 <code>allowCredentials[i]</code> 设置 <code>transports: storedTransports</code>。如果做<strong>无用户名/可发现凭据 + Conditional UI</strong>，通常<strong>不传 <code>allowCredentials</code></strong>（因此也没有 <code>transports</code>），由浏览器自行发现。(<a href="https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports" title="AuthenticatorAttestationResponse: getTransports() method - Web APIs | MDN" target="_blank" rel="noreferrer">MDN Web Docs</a>)</li><li><strong>忽略未知值</strong> 规范要求客户端忽略未知 <code>transports</code>，所以<strong>直接存原值</strong>是安全的。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</li><li><strong>与“提示（Hints）”配合</strong> 当你不提供 <code>allowCredentials</code>（比如做直登），可用 <strong>PublicKeyCredentialHint</strong>（如 <code>&quot;security-key&quot; | &quot;client-device&quot; | &quot;hybrid&quot;</code>）引导 UI，弥补没有 <code>transports</code> 的情况。(<a href="https://www.w3.org/TR/webauthn-3/" title="Web Authentication: An API for accessing Public Key Credentials - Level 3" target="_blank" rel="noreferrer">W3C</a>)</li></ol><hr><h2 id="一览速查表" tabindex="-1">一览速查表 <a class="header-anchor" href="#一览速查表" aria-label="Permalink to &quot;一览速查表&quot;">​</a></h2><table tabindex="0"><thead><tr><th>取值</th><th>设备/场景</th><th>典型例子</th></tr></thead><tbody><tr><td><code>usb</code></td><td>漫游钥，经 USB 连接</td><td>YubiKey USB-A/C</td></tr><tr><td><code>nfc</code></td><td>漫游钥，经 NFC 轻触</td><td>手机 NFC 读卡</td></tr><tr><td><code>ble</code></td><td>漫游钥，经 BLE</td><td>蓝牙安全钥</td></tr><tr><td><code>smart-card</code></td><td>接触式智能卡</td><td>PIV/CAC 卡座</td></tr><tr><td><code>hybrid</code></td><td><strong>跨设备 passkey</strong>（近距 + 云辅助）</td><td>用手机给电脑“确认登录”</td></tr><tr><td><code>internal</code></td><td><strong>平台认证器</strong>（不可移除）</td><td>Windows Hello / Touch ID</td></tr></tbody></table><p>（如遇到历史值 <code>cable</code>，按 <code>hybrid</code> 处理。）(<a href="https://chromedevtools.github.io/devtools-protocol/tot/WebAuthn/?utm_source=chatgpt.com" title="WebAuthn domain - Chrome DevTools Protocol - GitHub Pages" target="_blank" rel="noreferrer">chromedevtools.github.io</a>)</p><p>如果你愿意，我可以<strong>给出你项目里保存/回填 <code>transports</code> 的最小改动片段</strong>（只贴需要改的行，复杂逻辑行会上方加中文注释），并顺手加一条**<code>cable→hybrid</code> 兼容映射**。</p>',18)])])}const u=e(a,[["render",s]]);export{g as __pageData,u as default};
