import{_ as i,c as t,o as a,ag as e}from"./chunks/framework.oqSrIbQK.js";const d=JSON.parse('{"title":"现在 iOS 能否稳定拿到“唯一标识”？——主流技术、限制与可落地方案（附你这段 Swift 的微调建议）","description":"","frontmatter":{"title":"现在 iOS 能否稳定拿到“唯一标识”？——主流技术、限制与可落地方案（附你这段 Swift 的微调建议）","date":"2025-09-16T00:00:00.000Z","tags":["iOS","设备标识","隐私合规","DeviceCheck","App Attest","移动研发"]},"headers":[],"relativePath":"posts/需求实现/唯一标识/现在 iOS 能否稳定拿到“唯一标识.md","filePath":"posts/需求实现/唯一标识/现在 iOS 能否稳定拿到“唯一标识.md","lastUpdated":1758475234000}'),n={name:"posts/需求实现/唯一标识/现在 iOS 能否稳定拿到“唯一标识.md"};function l(r,s,p,h,k,o){return a(),t("div",null,[...s[0]||(s[0]=[e(`<h2 id="一句话结论" tabindex="-1">一句话结论 <a class="header-anchor" href="#一句话结论" aria-label="Permalink to &quot;一句话结论&quot;">​</a></h2><p><strong>不能</strong>。iOS 在系统与审核层面<strong>不提供也不允许</strong>获取“跨应用/跨安装/跨设备”的稳定唯一标识。你能拿到的只有<strong>在特定前提下“较稳定”的替代物</strong>（如 IDFV、Keychain 自生成 UUID、经用户授权的 IDFA）以及<strong>隐私友好型的归因/信誉能力</strong>（如 SKAdNetwork、DeviceCheck、App Attest）。核心原因：<strong>IDFA 需 ATT 授权</strong>，<strong>IDFV 受卸载规则影响</strong>，<strong>指纹识别被明令禁止</strong>。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</p><h2 id="主流-标识-信号-一览-能否-稳定唯一" tabindex="-1">主流“标识/信号”一览（能否“稳定唯一”？） <a class="header-anchor" href="#主流-标识-信号-一览-能否-稳定唯一" aria-label="Permalink to &quot;主流“标识/信号”一览（能否“稳定唯一”？）&quot;">​</a></h2><table tabindex="0"><thead><tr><th>能力</th><th style="text-align:right;">是否可跨应用</th><th style="text-align:right;">是否可跨安装</th><th style="text-align:right;">是否可跨设备</th><th>说明</th></tr></thead><tbody><tr><td><strong>IDFA</strong></td><td style="text-align:right;">✅（同意后）</td><td style="text-align:right;">✅（用户可随时关闭、重置）</td><td style="text-align:right;">❌</td><td>iOS 14.5+ 必须先获 <strong>ATT</strong> 授权，拒绝则返回不可用/全零。用于广告归因而非强绑定身份。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</td></tr><tr><td><strong>IDFV</strong></td><td style="text-align:right;">✅（同开发者 Team）</td><td style="text-align:right;">❌</td><td style="text-align:right;">❌</td><td><strong>当设备上同一开发者的所有 App 被删光后再装</strong>，IDFV 会变化（Apple 文档明确）。(<a href="https://developer.apple.com/documentation/uikit/uidevice/identifierforvendor?utm_source=chatgpt.com" title="identifierForVendor | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</td></tr><tr><td><strong>Keychain 自生成 UUID</strong></td><td style="text-align:right;">❌</td><td style="text-align:right;"><strong>通常 ✅</strong></td><td style="text-align:right;">❌</td><td><strong>实践上</strong>多次重装仍在，但<strong>非官方保证</strong>，在抹除设备/恢复/重置钥匙串等情况下会丢失；不要当作强承诺。(<a href="https://support.apple.com/guide/security/keychain-data-protection-secb0694df1a/web?utm_source=chatgpt.com" title="Keychain data protection" target="_blank" rel="noreferrer">苹果支持</a>)</td></tr><tr><td><strong>DeviceCheck（二进制 2 位 + 令牌）</strong></td><td style="text-align:right;">✅（同开发者 Team）</td><td style="text-align:right;">✅</td><td style="text-align:right;">❌</td><td>由 Apple 服务器保存<strong>每设备两位状态</strong>，可跨重装，用于“每设备限领”“反作弊基线”。不是 ID。(<a href="https://developer.apple.com/documentation/devicecheck?utm_source=chatgpt.com" title="DeviceCheck | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</td></tr><tr><td><strong>App Attest（设备内密钥对）</strong></td><td style="text-align:right;">✅（同应用）</td><td style="text-align:right;">❌</td><td style="text-align:right;">❌</td><td>用来证明“请求来自你真 App + 真设备环境”，<strong>密钥不随重装保留</strong>，更像<strong>完整性证明</strong>而非 ID。(<a href="https://developer.apple.com/documentation/devicecheck/establishing-your-app-s-integrity?utm_source=chatgpt.com" title="Establishing your app&#39;s integrity" target="_blank" rel="noreferrer">Apple Developer</a>)</td></tr><tr><td><strong>推送 Token</strong></td><td style="text-align:right;">✅（同开发者可收集）</td><td style="text-align:right;">❌</td><td style="text-align:right;">❌</td><td>可能随系统/账号/还原而变，不能当唯一 ID。（官方未承诺稳定性）</td></tr><tr><td><strong>SKAdNetwork / AdAttributionKit</strong></td><td style="text-align:right;">—</td><td style="text-align:right;">—</td><td style="text-align:right;">—</td><td><strong>聚合归因</strong>，无设备级 ID，隐私优先，不需 ATT。(<a href="https://developer.apple.com/documentation/storekit/skadnetwork/?utm_source=chatgpt.com" title="SKAdNetwork | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</td></tr></tbody></table><blockquote><p>结论：<strong>没有一个选项能满足“三跨”</strong>（跨应用/跨安装/跨设备）的绝对稳定唯一。</p></blockquote><h2 id="为什么做不到-稳定唯一" tabindex="-1">为什么做不到“稳定唯一”？ <a class="header-anchor" href="#为什么做不到-稳定唯一" aria-label="Permalink to &quot;为什么做不到“稳定唯一”？&quot;">​</a></h2><ol><li><p><strong>政策与审核</strong>：Apple 明确禁止通过收集多种设备信号进行<strong>指纹识别</strong>，<strong>无论用户是否同意跟踪</strong>都不允许；并用<strong>隐私清单 + 必填理由 API</strong>强力约束。(<a href="https://developer.apple.com/documentation/bundleresources/describing-use-of-required-reason-api?utm_source=chatgpt.com" title="Describing use of required reason API" target="_blank" rel="noreferrer">Apple Developer</a>)</p></li><li><p><strong>API 设计</strong>：</p><ul><li><strong>IDFA</strong>受 <strong>ATT</strong> 管控；用户拒绝即不可用。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>IDFV</strong>天生绑定“<strong>设备 × 开发者</strong>”，按文档规定满足条件就会变。(<a href="https://developer.apple.com/documentation/uikit/uidevice/identifierforvendor?utm_source=chatgpt.com" title="identifierForVendor | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>Keychain</strong>适合保存敏感“<strong>小数据</strong>”，但<strong>未文档化保证</strong>“卸载后仍在”的行为，不能当契约写进需求。(<a href="https://support.apple.com/guide/security/keychain-data-protection-secb0694df1a/web?utm_source=chatgpt.com" title="Keychain data protection" target="_blank" rel="noreferrer">苹果支持</a>)</li></ul></li></ol><h2 id="_2025-年主流、合规的-设备识别-反作弊-归因-组合拳" tabindex="-1">2025 年主流、合规的“设备识别/反作弊/归因”组合拳 <a class="header-anchor" href="#_2025-年主流、合规的-设备识别-反作弊-归因-组合拳" aria-label="Permalink to &quot;2025 年主流、合规的“设备识别/反作弊/归因”组合拳&quot;">​</a></h2><blockquote><p>目标：<strong>够用且合规</strong>，实现“同设备再来能识别、用户不授权也能基本控滥用、广告可归因”。</p></blockquote><ol><li><p><strong>基础安装标识（侧重可用性）</strong></p><ul><li>采用 <strong>IDFV（优先） + Keychain 自生成 UUID（兜底）</strong>，<strong>仅存哈希</strong>（加盐）用于<strong>去标识化</strong>统计与“安装级”识别。<strong>不要</strong>把它当“永不变”的强 ID。(<a href="https://developer.apple.com/documentation/uikit/uidevice/identifierforvendor?utm_source=chatgpt.com" title="identifierForVendor | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul></li><li><p><strong>广告与增长</strong></p><ul><li>若用户授权 ATT → 用 <strong>IDFA</strong>；未授权 → <strong>SKAdNetwork/AdAttributionKit</strong> 做<strong>聚合归因</strong>，避免用户级跟踪。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul></li><li><p><strong>反作弊与完整性</strong></p><ul><li><strong>DeviceCheck</strong>：跨重装维持“每设备 2bit 状态”（如是否已领过新人礼包）。</li><li><strong>App Attest</strong>：校验 App 与设备环境的<strong>完整性</strong>（反注入/模拟/批量刷）。注意<strong>重装即“从头开始”</strong>。(<a href="https://developer.apple.com/documentation/devicecheck/accessing-and-modifying-per-device-data?utm_source=chatgpt.com" title="Accessing and modifying per-device data" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul></li><li><p><strong>账号体系优先</strong></p><ul><li>从<strong>设备标识转向账号标识</strong>（含 <strong>Passkeys</strong> 登录），跨设备、跨平台的稳定性来自<strong>账号</strong>而非设备。</li></ul></li><li><p><strong>合规红线</strong></p><ul><li><strong>指纹识别禁止</strong>；使用“可能被滥用”的 API 需在<strong>隐私清单</strong>中声明<strong>合法理由</strong>。(<a href="https://developer.apple.com/documentation/bundleresources/describing-use-of-required-reason-api?utm_source=chatgpt.com" title="Describing use of required reason API" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul></li></ol><hr><h2 id="适配你现有-swift-代码的微调建议-只给改动片段-复杂逻辑上方含注释" tabindex="-1">适配你现有 Swift 代码的<strong>微调建议</strong>（只给改动片段，复杂逻辑上方含注释） <a class="header-anchor" href="#适配你现有-swift-代码的微调建议-只给改动片段-复杂逻辑上方含注释" aria-label="Permalink to &quot;适配你现有 Swift 代码的**微调建议**（只给改动片段，复杂逻辑上方含注释）&quot;">​</a></h2><blockquote><p>你的整体思路对路：<strong>IDFV/Keychain</strong> + 可选 <strong>IDFA</strong>，并做<strong>加盐哈希</strong>与<strong>策略</strong>。下面是若干稳健性/合规性细节小修。</p></blockquote><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复杂逻辑：避免在主线程阻塞等待 ATT；且用授权状态判断，不再依赖 isAdvertisingTrackingEnabled</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getIDFAOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requestATT: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">iOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), requestATT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ATTrackingManager.trackingAuthorizationStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .notDetermined {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 在后台队列同步等待，但调用方请勿在主线程直接调用此方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DispatchSemaphore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DispatchQueue.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ATTrackingManager.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">requestTrackingAuthorization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sem.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">signal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sem.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wait</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 稍放宽等待时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">iOS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        guard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ATTrackingManager.trackingAuthorizationStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .authorized </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASIdentifierManager.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">shared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().advertisingIdentifier.uuidString</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stripped </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replacingOccurrences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replacingOccurrences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stripped.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isEmpty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复杂逻辑：方法名更准确；保留旧别名避免上层改动</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prefetchIdfaAfterConsent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getIDFAOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 兼容旧安卓同名别名（避免破坏现有调用）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@objc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prefetchOaidAfterConsent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    prefetchIdfaAfterConsent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复杂逻辑：cacheKey 加上 policy，确保不同策略下缓存不串</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cacheKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optionsJson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exposeRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parseOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(optionsJson))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.policy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;global&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;o:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(optionsJson)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#p:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(pol)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#c:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(consent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#s:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(strict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#x:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(exposeRaw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#salt:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\\(salt)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-swift vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">swift</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 复杂逻辑：对 IDFA 的 IdValue 也允许受控暴露原值（默认 false），与其它源对齐</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> includeEff.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;idfa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idfa </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> effectiveStrict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getIDFAOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(opts.requestATT)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limited </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (idfa </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limited </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;no-permission-or-limited&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 将 exposeRaw 传入，而不是强制 false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;idfa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> buildValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;idfa&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: idfa, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exposeRaw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: opts.exposeRaw, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">limited</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: limited, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: msg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>额外提示</p><ul><li><strong>不要在主线程</strong>里调用会等待 ATT 的方法，避免卡 UI。</li><li><code>isAdvertisingTrackingEnabled</code> 在 ATT 时代<strong>并非决定性信号</strong>，以 <code>ATTrackingManager</code> 状态为准。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul></blockquote><hr><h2 id="推荐的最小可行方案-mvp-落地顺序" tabindex="-1">推荐的最小可行方案（MVP 落地顺序） <a class="header-anchor" href="#推荐的最小可行方案-mvp-落地顺序" aria-label="Permalink to &quot;推荐的最小可行方案（MVP 落地顺序）&quot;">​</a></h2><ol><li><strong>服务端建模</strong>：<code>install_id</code>（Keychain UUID 的加盐哈希） + <code>id_source</code>（idfv/guid/idfa…）+ <code>first_seen_ts</code>。</li><li><strong>客户端策略</strong>：<code>policy: &quot;cn&quot;</code> 下默认 <code>[&quot;idfv&quot;,&quot;guid&quot;]</code>；<code>&quot;global&quot;</code> 才考虑 <code>idfa</code>。你代码已支持。</li><li><strong>增长归因</strong>：集成 <strong>SKAdNetwork/AdAttributionKit</strong>；用户授权后再启用 IDFA 路径。(<a href="https://developer.apple.com/documentation/storekit/skadnetwork/?utm_source=chatgpt.com" title="SKAdNetwork | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>反作弊</strong>：上线 <strong>DeviceCheck</strong> 的 2bit 状态（如 <code>hasClaimed</code> / <code>isFlagged</code>），关键流程用 <strong>App Attest</strong> 做请求完整性校验。(<a href="https://developer.apple.com/documentation/devicecheck/accessing-and-modifying-per-device-data?utm_source=chatgpt.com" title="Accessing and modifying per-device data" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>合规</strong>：在隐私清单中申报“必填理由 API”，并<strong>不要</strong>实现任何“设备指纹”。(<a href="https://developer.apple.com/documentation/bundleresources/describing-use-of-required-reason-api?utm_source=chatgpt.com" title="Describing use of required reason API" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ol><hr><h2 id="关键参考" tabindex="-1">关键参考 <a class="header-anchor" href="#关键参考" aria-label="Permalink to &quot;关键参考&quot;">​</a></h2><ul><li><strong>IDFA 需 ATT 授权</strong>与获取限制。(<a href="https://developer.apple.com/documentation/adsupport/asidentifiermanager/advertisingidentifier?utm_source=chatgpt.com" title="advertisingIdentifier | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>IDFV 的变更规则</strong>（删除同 Vendor 的所有 App 后会变）。(<a href="https://developer.apple.com/documentation/uikit/uidevice/identifierforvendor?utm_source=chatgpt.com" title="identifierForVendor | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>Keychain 是敏感小数据的安全存储</strong>，但卸载持久性<strong>非官方契约</strong>（工程圈普遍观察到“多次重装仍在”）。(<a href="https://support.apple.com/guide/security/keychain-data-protection-secb0694df1a/web?utm_source=chatgpt.com" title="Keychain data protection" target="_blank" rel="noreferrer">苹果支持</a>)</li><li><strong>DeviceCheck / App Attest</strong> 的用途与持久性特征。(<a href="https://developer.apple.com/documentation/devicecheck/accessing-and-modifying-per-device-data?utm_source=chatgpt.com" title="Accessing and modifying per-device data" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>SKAdNetwork/AdAttributionKit</strong> 做隐私友好型归因。(<a href="https://developer.apple.com/documentation/storekit/skadnetwork/?utm_source=chatgpt.com" title="SKAdNetwork | Apple Developer Documentation" target="_blank" rel="noreferrer">Apple Developer</a>)</li><li><strong>禁止设备指纹</strong>与隐私清单“必填理由 API”。(<a href="https://developer.apple.com/documentation/bundleresources/describing-use-of-required-reason-api?utm_source=chatgpt.com" title="Describing use of required reason API" target="_blank" rel="noreferrer">Apple Developer</a>)</li></ul><hr><h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h3><ul><li><strong>没有</strong>“一把通吃、永不变”的 iOS 设备唯一标识。</li><li><strong>工程上</strong>用 <strong>IDFV + Keychain UUID（哈希）</strong> 做“安装级”识别，<strong>授权后</strong>再用 IDFA；<strong>归因</strong>走 SKAdNetwork；<strong>反作弊</strong>以 DeviceCheck/App Attest 为主；<strong>长期稳定</strong>靠<strong>账号体系</strong>。</li><li><strong>合规优先</strong>：别做指纹识别；把隐私清单与 ATT 路径打通，体验与审核两不误。</li></ul>`,27)])])}const c=i(n,[["render",l]]);export{d as __pageData,c as default};
