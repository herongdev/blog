import{_ as e,c as s,o as i,ag as a}from"./chunks/framework.oqSrIbQK.js";const k=JSON.parse('{"title":"Passkeys/WebAuthn 配置项全集：可选值与作用（注册 + 登录，含 simplewebauthn v11+）","description":"","frontmatter":{"title":"Passkeys/WebAuthn 配置项全集：可选值与作用（注册 + 登录，含 simplewebauthn v11+）","date":"2025-09-19T00:00:00.000Z","tags":["Passkeys","WebAuthn","配置项","simplewebauthn"]},"headers":[],"relativePath":"posts/需求实现/登录鉴权/Passkeys-WebAuthn 配置项全集：可选值与作用（注册 + 登录，含 simplewebauthn v11+）.md","filePath":"posts/需求实现/登录鉴权/Passkeys-WebAuthn 配置项全集：可选值与作用（注册 + 登录，含 simplewebauthn v11+）.md","lastUpdated":1758216284000}'),d={name:"posts/需求实现/登录鉴权/Passkeys-WebAuthn 配置项全集：可选值与作用（注册 + 登录，含 simplewebauthn v11+）.md"};function n(o,t,r,l,h,c){return i(),s("div",null,[...t[0]||(t[0]=[a(`<blockquote><p>目标：把 <strong>Passkeys/WebAuthn</strong> 中&quot;你会实际用到的配置项&quot;一次讲清楚：</p><ul><li>覆盖 <strong>注册（create）</strong> 与 <strong>登录（get）</strong> 两个阶段</li><li>对应 <strong>服务端（simplewebauthn / @simplewebauthn/server v11+）</strong> 产出的&quot;options&quot;以及<strong>前端</strong> <code>navigator.credentials.create()/get()</code> 的参数</li><li>每个字段给出 <strong>可选值</strong> + <strong>含义</strong> + <strong>常用建议</strong></li><li>标注<strong>兼容性/陷阱</strong>与<strong>推荐默认值</strong></li></ul></blockquote><hr><h2 id="总览思维导图-速查" tabindex="-1">总览思维导图（速查） <a class="header-anchor" href="#总览思维导图-速查" aria-label="Permalink to &quot;总览思维导图（速查）&quot;">​</a></h2><ul><li><p>注册 Registration（<code>navigator.credentials.create()</code> / <code>generateRegistrationOptions()</code>）</p><ul><li>基础：<code>rp</code>, <code>user</code>, <code>challenge</code>, <code>pubKeyCredParams</code>(= simplewebauthn 的 <code>supportedAlgorithmIDs</code>), <code>timeout</code>, <code>attestation</code></li><li>选择器：<code>authenticatorSelection</code> → <code>residentKey</code>, <code>userVerification</code>, <code>authenticatorAttachment</code>, <code>requireResidentKey(旧)</code></li><li>其他：<code>excludeCredentials</code>, <code>hints(浏览器端)</code>, <code>extensions</code>（常用：<code>credProps</code>, <code>largeBlob</code>, <code>prf</code>, <code>appidExclude(兼容U2F)</code>）</li></ul></li><li><p>登录 Authentication（<code>navigator.credentials.get()</code> / <code>generateAuthenticationOptions()</code>）</p><ul><li>基础：<code>challenge</code>, <code>timeout</code>, <code>rpId</code>, <code>userVerification</code></li><li>定位：<code>allowCredentials</code></li><li>其他：<code>hints(浏览器端)</code>, <code>mediation(浏览器端Conditional UI)</code>, <code>extensions</code>（常用：<code>uvm</code>, <code>largeBlob</code>, <code>appid(兼容U2F)</code>）</li></ul></li></ul><hr><h2 id="一、注册-registration-配置项" tabindex="-1">一、注册 Registration 配置项 <a class="header-anchor" href="#一、注册-registration-配置项" aria-label="Permalink to &quot;一、注册 Registration 配置项&quot;">​</a></h2><h3 id="_1-基础字段" tabindex="-1">1. 基础字段 <a class="header-anchor" href="#_1-基础字段" aria-label="Permalink to &quot;1. 基础字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>可选值/类型</th><th>作用</th><th>建议</th></tr></thead><tbody><tr><td><code>rp.id</code></td><td>域名字符串（如 <code>example.com</code>）</td><td><strong>Relying Party ID</strong>。<strong>必须与站点有效父域匹配</strong>，决定凭据的绑定域。</td><td>用你的主域名；本地开发用同源域。</td></tr><tr><td><code>rp.name</code></td><td>文本</td><td>在系统提示里展示给用户看的&quot;站点名&quot;。</td><td>友好易识别，如&quot;公司后台&quot;。</td></tr><tr><td><code>user.id</code></td><td><code>ArrayBuffer</code>/<code>Uint8Array</code>（<strong>v11+ 推荐二进制</strong>）</td><td>用户唯一 ID（不会显示给用户）。</td><td>用数据库主键编码为 <code>Uint8Array</code>。</td></tr><tr><td><code>user.name</code></td><td>文本</td><td>用户名（可能显示给用户）。</td><td>用登录名/邮箱；唯一。</td></tr><tr><td><code>user.displayName</code></td><td>文本</td><td>美观显示名（一定会显示）。</td><td>用昵称/真实姓名。</td></tr><tr><td><code>challenge</code></td><td>随机字节</td><td>防重放挑战，<strong>必须一次性使用</strong>。</td><td>服务端生成并缓存（Redis）；<strong>Base64url</strong> 存储。</td></tr><tr><td><code>timeout</code></td><td>毫秒</td><td>超时。</td><td>60000–120000ms，按体验权衡。</td></tr><tr><td><code>attestation</code>（= <code>attestationType</code>）</td><td><code>&#39;none&#39; | &#39;indirect&#39; | &#39;direct&#39; | &#39;enterprise&#39;</code></td><td>是否要设备证明（隐私/合规取舍）。</td><td><strong>默认 <code>none</code></strong>；合规强要求才用 <code>direct/enterprise</code>。</td></tr><tr><td><code>pubKeyCredParams</code></td><td>COSE 列表（如 <code>[{alg:-7,type:&#39;public-key&#39;}]</code>）</td><td>指定可接受算法。</td><td><strong>最少含 <code>-7</code>(ES256)</strong>；为兼容可加 <code>-257</code>(RS256)；前瞻可加 <code>-8</code>(EdDSA)。</td></tr></tbody></table><blockquote><p>在 <strong>simplewebauthn v11+</strong> 中，你常会看到把算法用更直观的 <code>supportedAlgorithmIDs: number[]</code> 来传（例如 <code>[-7, -257]</code>）。两者等价，服务端会转换为 <code>pubKeyCredParams</code>。</p></blockquote><h3 id="_2-认证器选择器-authenticatorselection" tabindex="-1">2. 认证器选择器 <code>authenticatorSelection</code> <a class="header-anchor" href="#_2-认证器选择器-authenticatorselection" aria-label="Permalink to &quot;2. 认证器选择器 \`authenticatorSelection\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th>子字段</th><th>可选值</th><th>作用</th><th>影响/陷阱</th><th>推荐</th></tr></thead><tbody><tr><td><code>residentKey</code></td><td><code>&#39;required&#39; | &#39;preferred&#39; | &#39;discouraged&#39;</code></td><td>是否创建<strong>可发现凭据</strong>（也就是&quot;<strong>passkey</strong>&quot;：可免用户名）。</td><td><code>required</code> 会占用设备存储但带来一键直登；<code>discouraged</code> 不是 passkey。</td><td><strong><code>required</code></strong> 做 passkey 体验；保守用 <code>preferred</code>。</td></tr><tr><td><code>userVerification</code></td><td><code>&#39;required&#39; | &#39;preferred&#39; | &#39;discouraged&#39;</code></td><td>是否要求生物识别/PIN。</td><td><code>required</code> 更安全但可能多一步；<code>discouraged</code> 少见。</td><td>B2C：<strong><code>preferred</code></strong>；高敏后台：<strong><code>required</code></strong>。</td></tr><tr><td><code>authenticatorAttachment</code></td><td><code>&#39;platform&#39; | &#39;cross-platform&#39;</code></td><td>限定<strong>平台认证器</strong>（如手机/电脑内置）或<strong>跨平台</strong>（安全钥）。</td><td>限太死会掉成功率。</td><td>一般<strong>不指定</strong>；或按场景选择。</td></tr><tr><td><code>requireResidentKey</code></td><td><code>boolean</code>（<strong>已过时</strong>）</td><td>旧字段，等价于 <code>residentKey</code> 早期语义。</td><td>新实现请用 <code>residentKey</code>。</td><td>不再使用。</td></tr></tbody></table><h3 id="_3-排他清单-excludecredentials" tabindex="-1">3. 排他清单 <code>excludeCredentials</code> <a class="header-anchor" href="#_3-排他清单-excludecredentials" aria-label="Permalink to &quot;3. 排他清单 \`excludeCredentials\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>作用</th><th>建议</th></tr></thead><tbody><tr><td><code>excludeCredentials</code></td><td><code>{ type:&#39;public-key&#39;, id: ArrayBuffer, transports?: string[] }[]</code></td><td>列出<strong>不允许重复注册</strong>的已有凭据（按 <code>id</code>）。</td><td>取用户已有的 credentialId 全部填上，避免重复创建。</td></tr></tbody></table><h3 id="_4-浏览器-提示-hints-可选-前端" tabindex="-1">4. 浏览器&quot;提示&quot; <code>hints</code>（可选，前端） <a class="header-anchor" href="#_4-浏览器-提示-hints-可选-前端" aria-label="Permalink to &quot;4. 浏览器&quot;提示&quot; \`hints\`（可选，前端）&quot;">​</a></h3><table tabindex="0"><thead><tr><th>值</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td><code>&#39;security-key&#39;</code>, <code>&#39;client-device&#39;</code>, <code>&#39;hybrid&#39;</code> 等</td><td>给浏览器一个<strong>提示</strong>，帮助选择认证器/传输方式。</td><td>不是所有浏览器都实现；可不填。</td></tr></tbody></table><h3 id="_5-扩展-extensions-注册" tabindex="-1">5. 扩展 <code>extensions</code>（注册） <a class="header-anchor" href="#_5-扩展-extensions-注册" aria-label="Permalink to &quot;5. 扩展 \`extensions\`（注册）&quot;">​</a></h3><blockquote><p>扩展是&quot;可选增强&quot;。不同平台支持度不同，<strong>启用前要允许降级</strong>。</p></blockquote><table tabindex="0"><thead><tr><th>扩展名</th><th>方向</th><th>可选值</th><th>作用</th><th>返回/副作用</th><th>建议</th></tr></thead><tbody><tr><td><code>credProps</code></td><td>reg</td><td><code>true/false</code></td><td>要求返回<strong>凭据属性</strong>（是否为 resident key）。</td><td><code>clientExtensionResults.credProps = { rk?: boolean }</code></td><td><strong>建议 <code>true</code></strong>，落库凭据类型。</td></tr><tr><td><code>largeBlob</code></td><td>reg/get</td><td><code>{ support: &#39;required&#39; | &#39;preferred&#39; }</code></td><td>支持<strong>大对象存储</strong>（绑定在凭据上）。</td><td>需要平台/设备支持；可用于小量用户数据。</td><td>如无强需求，默认不启或设 <code>preferred</code>。</td></tr><tr><td><code>prf</code>（WebAuthn PRF）</td><td>reg/get</td><td><code>{ eval?: {...}, evalByCredential?: {...} }</code></td><td>让认证器基于密钥派生伪随机值，做<strong>对称派生</strong>用途。</td><td>前沿能力，支持度逐步增长。</td><td>高阶场景再用。</td></tr><tr><td><code>appidExclude</code></td><td>reg</td><td>旧 U2F 兼容</td><td>防止已在 U2F AppID 下注册的密钥在当前 rpId 再注册。</td><td>遗留兼容。</td><td>仅做历史迁移时用。</td></tr></tbody></table><hr><h2 id="二、登录-authentication-配置项" tabindex="-1">二、登录 Authentication 配置项 <a class="header-anchor" href="#二、登录-authentication-配置项" aria-label="Permalink to &quot;二、登录 Authentication 配置项&quot;">​</a></h2><h3 id="_1-基础字段-1" tabindex="-1">1. 基础字段 <a class="header-anchor" href="#_1-基础字段-1" aria-label="Permalink to &quot;1. 基础字段&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>可选值/类型</th><th>作用</th><th>建议</th></tr></thead><tbody><tr><td><code>challenge</code></td><td>随机字节</td><td>防重放挑战。</td><td>服务器生成并缓存（Redis）。</td></tr><tr><td><code>timeout</code></td><td>毫秒</td><td>超时。</td><td>60000–120000ms。</td></tr><tr><td><code>rpId</code></td><td>域名</td><td>与注册时相同的 RP ID。</td><td>填你站点主域。</td></tr><tr><td><code>userVerification</code></td><td><code>&#39;required&#39; | &#39;preferred&#39; | &#39;discouraged&#39;</code></td><td>是否要求生物识别/PIN。</td><td>B2C：<strong><code>preferred</code></strong>；高敏后台：<strong><code>required</code></strong>。</td></tr></tbody></table><h3 id="_2-定位凭据-allowcredentials" tabindex="-1">2. 定位凭据 <code>allowCredentials</code> <a class="header-anchor" href="#_2-定位凭据-allowcredentials" aria-label="Permalink to &quot;2. 定位凭据 \`allowCredentials\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>类型</th><th>作用</th><th>典型用法</th></tr></thead><tbody><tr><td><code>allowCredentials</code></td><td><code>{ type:&#39;public-key&#39;, id:ArrayBuffer, transports?: string[] }[]</code></td><td><strong>白名单</strong>方式，限定可用哪些凭据（常在&quot;用户名已知&quot;的传统登录流）。</td><td>用户名 → 查出该用户所有 credentialId → 全部填入。</td></tr><tr><td>（为空或不传）</td><td>——</td><td>允许<strong>可发现凭据</strong>自由匹配（配合 Conditional UI 可&quot;无用户名直登&quot;）。</td><td><strong>Passkey 体验</strong>常用做法。</td></tr></tbody></table><h3 id="_3-浏览器端-ui-行为" tabindex="-1">3. 浏览器端 UI 行为 <a class="header-anchor" href="#_3-浏览器端-ui-行为" aria-label="Permalink to &quot;3. 浏览器端 UI 行为&quot;">​</a></h3><table tabindex="0"><thead><tr><th>字段</th><th>值</th><th>作用</th><th>备注</th></tr></thead><tbody><tr><td><code>mediation</code>（在 <code>navigator.credentials.get()</code> 的 <code>publicKey</code> 旁边、同级传入）</td><td><code>&#39;conditional&#39; | &#39;required&#39; | &#39;silent&#39;</code></td><td><strong>Conditional UI</strong> 关键：<code>&#39;conditional&#39;</code> 允许地址栏内直接弹出选择框，实现&quot;一键直登&quot;。</td><td>需 HTTPS + 满足浏览器启用条件。</td></tr><tr><td><code>hints</code></td><td>同注册</td><td>选择器提示</td><td>可省略。</td></tr></tbody></table><h3 id="_4-扩展-extensions-登录" tabindex="-1">4. 扩展 <code>extensions</code>（登录） <a class="header-anchor" href="#_4-扩展-extensions-登录" aria-label="Permalink to &quot;4. 扩展 \`extensions\`（登录）&quot;">​</a></h3><table tabindex="0"><thead><tr><th>扩展名</th><th>方向</th><th>作用</th><th>返回</th><th>建议</th></tr></thead><tbody><tr><td><code>uvm</code></td><td>get</td><td>请求返回 <strong>User Verification Methods</strong>（使用了何种生物识别/PIN）。</td><td><code>clientExtensionResults.uvm</code> 列出方法</td><td>可用于风控/审计。</td></tr><tr><td><code>largeBlob</code></td><td>reg/get</td><td>同上</td><td>同上</td><td>同上</td></tr><tr><td><code>appid</code></td><td>get</td><td>兼容 U2F 的 AppID 登录</td><td>同上</td><td>仅历史迁移用。</td></tr><tr><td><code>prf</code></td><td>get</td><td>同上</td><td>同上</td><td>高阶用途再用。</td></tr></tbody></table><hr><h2 id="三、simplewebauthn-v11-与服务端路由要点" tabindex="-1">三、simplewebauthn（v11+）与服务端路由要点 <a class="header-anchor" href="#三、simplewebauthn-v11-与服务端路由要点" aria-label="Permalink to &quot;三、simplewebauthn（v11+）与服务端路由要点&quot;">​</a></h2><blockquote><p>你项目里已有：<code>/passkeys/register|login/(options|verify)</code>；挑战 <strong>Base64url</strong> 存 Redis；<code>passkey_credentials</code> 表存 <code>credential_id/public_key/counter</code>。</p></blockquote><h3 id="_1-生成注册选项-server" tabindex="-1">1. 生成注册选项（server） <a class="header-anchor" href="#_1-生成注册选项-server" aria-label="Permalink to &quot;1. 生成注册选项（server）&quot;">​</a></h3><p>常见字段（simplewebauthn 名称可能与原生略有不同）：</p><ul><li><code>rpID</code>, <code>rpName</code></li><li><code>userID: Uint8Array</code>, <code>userName</code>, <code>userDisplayName</code></li><li><code>supportedAlgorithmIDs: number[]</code> → 映射到 <code>pubKeyCredParams</code></li><li><code>attestationType: &#39;none&#39; | &#39;indirect&#39; | &#39;direct&#39; | &#39;enterprise&#39;</code></li><li><code>authenticatorSelection: { residentKey, userVerification, authenticatorAttachment? }</code></li><li><code>excludeCredentialIDs: Uint8Array[]</code>（封装后会变成 <code>excludeCredentials</code>）</li><li><code>timeout</code>, <code>extensions</code>（如 <code>credProps: true</code>）</li></ul><p><strong>默认推荐（B2C/通用）：</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attestationType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">supportedAlgorithmIDs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">257</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ES256 优先兼容 RS256</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticatorSelection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  residentKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 明确走 passkey</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  userVerification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preferred&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 有则强校验，兼顾成功率</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // authenticatorAttachment 不限定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">credProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120_000</span></span></code></pre></div><h3 id="_2-生成登录选项-server" tabindex="-1">2. 生成登录选项（server） <a class="header-anchor" href="#_2-生成登录选项-server" aria-label="Permalink to &quot;2. 生成登录选项（server）&quot;">​</a></h3><ul><li><code>rpID</code>, <code>timeout</code>, <code>userVerification</code></li><li><code>allowCredentialIDs?: Uint8Array[]</code>（有&quot;已知用户流&quot;用它；<strong>passkey 直登</strong>常为空）</li><li>你也可以在响应中带标识，提示前端是否采用 <strong>Conditional UI</strong>。</li></ul><p><strong>默认推荐：</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">userVerification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preferred&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// allowCredentialIDs 为空，鼓励可发现凭据 + Conditional UI</span></span></code></pre></div><hr><h2 id="四、常见组合场景与参数模板" tabindex="-1">四、常见组合场景与参数模板 <a class="header-anchor" href="#四、常见组合场景与参数模板" aria-label="Permalink to &quot;四、常见组合场景与参数模板&quot;">​</a></h2><h3 id="a-标准-passkey-支持-conditional-ui" tabindex="-1">A. 标准 Passkey（支持 Conditional UI） <a class="header-anchor" href="#a-标准-passkey-支持-conditional-ui" aria-label="Permalink to &quot;A. 标准 Passkey（支持 Conditional UI）&quot;">​</a></h3><p><strong>注册（create）</strong></p><ul><li><code>attestation: &#39;none&#39;</code></li><li><code>supportedAlgorithmIDs: [-7, -257]</code></li><li><code>authenticatorSelection.residentKey: &#39;required&#39;</code></li><li><code>authenticatorSelection.userVerification: &#39;preferred&#39;</code></li><li><code>extensions.credProps: true</code></li></ul><p><strong>登录（get）</strong></p><ul><li><code>userVerification: &#39;preferred&#39;</code></li><li><code>allowCredentials</code> <strong>不传/空</strong></li><li>浏览器端 <code>mediation: &#39;conditional&#39;</code>（配合地址栏直登）</li></ul><h3 id="b-高安全后台-企业管理台" tabindex="-1">B. 高安全后台/企业管理台 <a class="header-anchor" href="#b-高安全后台-企业管理台" aria-label="Permalink to &quot;B. 高安全后台/企业管理台&quot;">​</a></h3><p><strong>注册</strong></p><ul><li><code>attestation: &#39;none&#39; | &#39;direct&#39;</code>（合规要求再上 <code>direct</code>）</li><li><code>supportedAlgorithmIDs: [-7, -257]</code></li><li><code>residentKey: &#39;required&#39;</code></li><li><code>userVerification: &#39;required&#39;</code></li><li><code>extensions.credProps: true</code></li></ul><p><strong>登录</strong></p><ul><li><code>userVerification: &#39;required&#39;</code></li><li>已知用户流：填 <code>allowCredentials</code> 精确定位</li><li>不强追求 Conditional UI</li></ul><h3 id="c-兼容旧设备-历史-u2f" tabindex="-1">C. 兼容旧设备/历史 U2F <a class="header-anchor" href="#c-兼容旧设备-历史-u2f" aria-label="Permalink to &quot;C. 兼容旧设备/历史 U2F&quot;">​</a></h3><ul><li>算法包含 <code>-257</code></li><li>迁移阶段可能用到 <code>appid</code>/<code>appidExclude</code> 扩展（仅过渡）</li></ul><hr><h2 id="五、易踩坑与实战建议" tabindex="-1">五、易踩坑与实战建议 <a class="header-anchor" href="#五、易踩坑与实战建议" aria-label="Permalink to &quot;五、易踩坑与实战建议&quot;">​</a></h2><ol><li><strong>RP ID 与域名</strong>：<code>rp.id</code> 必须是<strong>当前站点的有效父域</strong>（或相同域）。子域 ↔ 主域要规划好。</li><li><strong>二进制 userID/credentialID</strong>：simplewebauthn v11+ 推荐 <strong><code>Uint8Array</code></strong>；<strong>持久化前做 base64url 编解码</strong>。</li><li><strong>挑战 challenge</strong>：务必 <strong>一次性</strong>、<strong>短期缓存</strong>（Redis）并按 <strong>base64url</strong> 存。</li><li><strong>计数器 counter</strong>：验证成功后更新数据库的 <code>signCount</code>/<code>counter</code>，用于克隆检测。</li><li><strong>算法集合</strong>：至少包含 <strong>ES256(-7)</strong>；为兼容再加 <strong>RS256(-257)</strong>。</li><li><strong>residentKey 与存储</strong>：<code>required</code> 会在设备上保存可发现凭据，空间有限；建议允许用户管理/删除。</li><li><strong>Conditional UI 条件</strong>：HTTPS、正确 RP、支持的浏览器版本等；前端要传 <code>mediation:&#39;conditional&#39;</code>。</li><li><strong>extensions 兼容</strong>：<code>credProps</code> 安全开启；<code>largeBlob/prf/uvm</code> 按需，用前先检测支持与回退路径。</li><li><strong>跨端同步</strong>：平台 passkey（iCloud/Google Password Manager）可跨设备同步，但<strong>RP ID 必须一致</strong>。</li><li><strong>合规与隐私</strong>：<code>attestation!=&#39;none&#39;</code> 需维护证书信任与合规评估，一般 B2C 不建议开启。</li></ol><hr><h2 id="六、最小可用清单-可直接抄" tabindex="-1">六、最小可用清单（可直接抄） <a class="header-anchor" href="#六、最小可用清单-可直接抄" aria-label="Permalink to &quot;六、最小可用清单（可直接抄）&quot;">​</a></h2><p><strong>注册 options（服务端生成）</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  rpID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  rpName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;示例站点&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  userID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Uint8Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 二进制</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  userName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  userDisplayName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Alice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  supportedAlgorithmIDs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">257</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  attestationType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;none&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  authenticatorSelection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    residentKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    userVerification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preferred&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">credProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>登录 options（服务端生成）</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  rpID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  userVerification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;preferred&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // allowCredentialIDs: []</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 留空以支持 passkey 直登</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120_000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>浏览器端（登录）启用 Conditional UI（示例）</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cred</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> navigator.credentials.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  publicKey: authenticationOptions,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 关键：在同级位置（不是 publicKey 里）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mediation: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;conditional&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><hr><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>以上就是 <strong>Passkeys/WebAuthn 配置项的&quot;全景图 + 默认建议&quot;</strong>。如果你把这些默认值落到当前项目，我可以按你仓库结构给出<strong>最小改动的代码片段</strong>（复杂逻辑行上加注释），直接对接你现有的 <code>/passkeys/*</code> 路由与 Redis/DB。</p>`,68)])])}const g=e(d,[["render",n]]);export{k as __pageData,g as default};
