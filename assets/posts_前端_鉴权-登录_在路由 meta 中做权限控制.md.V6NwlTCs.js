import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.oqSrIbQK.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/前端/鉴权-登录/在路由 meta 中做权限控制.md","filePath":"posts/前端/鉴权-登录/在路由 meta 中做权限控制.md","lastUpdated":1758475234000}'),h={name:"posts/前端/鉴权-登录/在路由 meta 中做权限控制.md"};function e(l,s,k,p,r,E){return t(),a("div",null,[...s[0]||(s[0]=[n(`<p>下面是「在路由 meta 中做权限控制」在大公司里常见、相对稳妥的做法（结合 RBAC/ABAC/ReBAC 与前后端协同）。我给出可落地的 meta 结构与守卫模板，并标注哪些是<strong>用户体验层面的前端拦截</strong>，哪些必须<strong>在服务端强制校验</strong>。</p><hr><h2 id="核心共识-非常重要" tabindex="-1">核心共识（非常重要） <a class="header-anchor" href="#核心共识-非常重要" aria-label="Permalink to &quot;核心共识（非常重要）&quot;">​</a></h2><ol><li><p><strong>前端路由 meta 只用于“体验层”</strong>（引导、隐藏入口、避免无意义请求）；<strong>真正的授权必须由服务端强制执行</strong>（API/资源级校验）。这是防止“破坏访问控制”类风险的基本原则。(<a href="https://router.vuejs.org/api/interfaces/routerecordredirect?utm_source=chatgpt.com" title="Interface: RouteRecordRedirect - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</p></li><li><p><strong>模型分层</strong>：</p><ul><li>RBAC：角色/权限（适合“是否能进这个页面/菜单”这类粗粒度）。</li><li>ABAC：基于属性（时间、地域、订单所属人等）做细粒度条件判断。</li><li>ReBAC：基于关系（如“文档共享/项目成员/上下级”）做复杂共享授权，业界参考 <strong>Zanzibar</strong> / <strong>OpenFGA</strong>。(<a href="https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html?utm_source=chatgpt.com" title="Authorization - OWASP Cheat Sheet Series" target="_blank" rel="noreferrer">cheatsheetseries.owasp.org</a>)</li></ul></li><li><p><strong>把鉴权逻辑集中</strong>在全局导航守卫/解析守卫里，避免散落各处；对需要异步确认的权限，放在 <code>beforeResolve</code>（确认导航前、组件解析后），以减少无用的请求与白屏。(<a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards?utm_source=chatgpt.com" title="导航守卫 - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</p></li><li><p>Vue Router 的 <strong>route meta</strong> 天生就是放“路由附加信息”的地方（如 <code>requiresAuth</code>、<code>requiresCamera</code> 等），可作为授权“声明”。(<a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards?utm_source=chatgpt.com" title="导航守卫 - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</p></li></ol><hr><h2 id="推荐的-meta-结构-示例" tabindex="-1">推荐的 meta 结构（示例） <a class="header-anchor" href="#推荐的-meta-结构-示例" aria-label="Permalink to &quot;推荐的 meta 结构（示例）&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// routes.ts</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/trading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Trading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@/pages/Trading.vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    requiresAuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 需登录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    rolesAnyOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;trader&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// RBAC：满足其一即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    permissionsAnyOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;trade:order.read&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// RBAC：权限点</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    featureFlagsAllOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;trading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 与灰度/开关系统联动</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ABAC / ReBAC：交给策略引擎（本地或网关）判断</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    policy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page:view&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 可以是对象或函数（从路由参数构造资源）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;trading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tenantId: to.params.tenantId }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    auditEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;page_trading_view&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可选：埋点/审计标识</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="全局导航守卫模板-前端体验层-gate" tabindex="-1">全局导航守卫模板（前端体验层 Gate） <a class="header-anchor" href="#全局导航守卫模板-前端体验层-gate" aria-label="Permalink to &quot;全局导航守卫模板（前端体验层 Gate）&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// router/guards.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { router } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./router&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { auth, authz, flags } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/services&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 伪代码：身份、授权、灰度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beforeEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 1) 登录检查</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.requiresAuth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">auth.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAuthenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, query: { redirect: to.fullPath } };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 2) 特性开关（灰度/AB 实验）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.featureFlagsAllOf?.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.featureFlagsAllOf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">every</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flags.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEnabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ok) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NotFound&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 或展示“功能未开放”</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 3) 角色/权限（RBAC）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.rolesAnyOf?.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.rolesAnyOf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authz.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasRole</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ok) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Forbidden&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (to.meta.permissionsAnyOf?.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ok</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.permissionsAnyOf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">some</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authz.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasPermission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ok) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Forbidden&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 对需要异步校验（ABAC / ReBAC / 资源维度）的页面再做一次解析前校验 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beforeResolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">to.meta.policy) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resource</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.policy.resource </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;function&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      ?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.policy.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(to)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to.meta.policy.resource;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 统一走“策略引擎/网关”查询（可对接 OPA/OpenFGA/自研鉴权服务）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> allowed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authz.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">can</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    action: to.meta.policy.action,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resource, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 包含 tenantId/ownerId 等上下文</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allowed) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Forbidden&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><blockquote><p>说明：<code>beforeEach</code> 做轻量、同步的快速拦截；<code>beforeResolve</code> 放需要异步/昂贵的策略校验（文档也建议在这里做“用户无法进入页面时应避免执行的操作”）。(<a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards?utm_source=chatgpt.com" title="导航守卫 - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</p></blockquote><hr><h2 id="服务端必须做的-真正的安全线" tabindex="-1">服务端必须做的（真正的安全线） <a class="header-anchor" href="#服务端必须做的-真正的安全线" aria-label="Permalink to &quot;服务端必须做的（真正的安全线）&quot;">​</a></h2><ul><li><strong>所有 API 和资源下载接口都要做同样的授权检查</strong>：携带用户身份（JWT/Session），在网关或服务里按 <strong>RBAC + ABAC/ReBAC 策略</strong>判断能否访问该“资源 + 动作”。不要信任前端路由结果。这个原则对应 OWASP 的建议。(<a href="https://router.vuejs.org/api/interfaces/routerecordredirect?utm_source=chatgpt.com" title="Interface: RouteRecordRedirect - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</li><li>推荐把策略<strong>集中到策略引擎</strong>：如 <strong>OPA</strong>（Policy-as-Code，解耦业务与策略）或 <strong>Zanzibar/OpenFGA</strong>（关系型授权，适合协作/共享）。(<a href="https://auth0.com/docs/manage-users/access-control/configure-core-rbac?utm_source=chatgpt.com" title="Configure Core Authorization Features for Role-Based ..." target="_blank" rel="noreferrer">Auth0</a>, <a href="https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html?utm_source=chatgpt.com" title="Authorization - OWASP Cheat Sheet Series" target="_blank" rel="noreferrer">cheatsheetseries.owasp.org</a>)</li><li><strong>多租户</strong>：把 <code>tenantId</code> 带入策略；禁止跨租户访问（路由参数与后端鉴权都要校验）。</li><li><strong>审计与告警</strong>：对拒绝访问/越权尝试做记录，便于排障与风控。</li></ul><hr><h2 id="常见坑" tabindex="-1">常见坑 <a class="header-anchor" href="#常见坑" aria-label="Permalink to &quot;常见坑&quot;">​</a></h2><ul><li>只在前端做权限控制（<strong>危险</strong>）：刷新接口照样能被调用（被抓包/脚本命中）。(<a href="https://router.vuejs.org/api/interfaces/routerecordredirect?utm_source=chatgpt.com" title="Interface: RouteRecordRedirect - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</li><li>把大量权限清单打包到前端（<strong>泄露内部枚举</strong>）；建议按最小化下发、或只下发当前会用到的“声明”。</li><li>权限变更后的<strong>本地缓存失效</strong>问题：监听 token 刷新/用户信息变更，及时刷新本地 <code>authz</code> 状态。</li><li><strong>路由切片</strong>过多导致守卫零散：统一在<strong>全局守卫</strong>集中处理，再由页面局部做兜底。(<a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards?utm_source=chatgpt.com" title="导航守卫 - Vue Router" target="_blank" rel="noreferrer">router.vuejs.org</a>)</li></ul><hr><h2 id="何时选-rbac-abac-rebac" tabindex="-1">何时选 RBAC / ABAC / ReBAC？ <a class="header-anchor" href="#何时选-rbac-abac-rebac" aria-label="Permalink to &quot;何时选 RBAC / ABAC / ReBAC？&quot;">​</a></h2><ul><li><strong>RBAC</strong>：菜单/页面粒度、后管类系统优先（实现简单、维护成本低）。</li><li><strong>ABAC</strong>：需要“条件（时间、地域、金额、订单所有者）”时；与策略引擎搭配更灵活。(<a href="https://auth0.com/docs/manage-users/access-control/configure-core-rbac?utm_source=chatgpt.com" title="Configure Core Authorization Features for Role-Based ..." target="_blank" rel="noreferrer">Auth0</a>)</li><li><strong>ReBAC（Zanzibar/OpenFGA）</strong>：文档/项目/看板这类“共享关系/层级关系”复杂的业务。(<a href="https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html?utm_source=chatgpt.com" title="Authorization - OWASP Cheat Sheet Series" target="_blank" rel="noreferrer">cheatsheetseries.owasp.org</a>)</li></ul><hr><p>如果你愿意，我可以把你现有的路由表整理成上述 meta 结构，并给出可直接落地的 <code>beforeEach/beforeResolve</code> 守卫代码（含 TypeScript 类型定义与单元测试样例）。</p>`,22)])])}const d=i(h,[["render",e]]);export{o as __pageData,d as default};
